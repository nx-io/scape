<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <http pattern="/resources/**" security="none" />
    <http pattern="/favicon.ico" security="none" />

    <http auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
        <intercept-url pattern="/loginPage" access="isAuthenticated() or isAnonymous()" />
        <intercept-url pattern="/loginHandle" access="isAuthenticated() or isAnonymous()" />
        <intercept-url pattern="/homePage" access="isAuthenticated()" />
        <intercept-url pattern="/account/info" access="isAuthenticated()" />
        <intercept-url pattern="/password/change" access="isAuthenticated()" />

        <custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />
        <custom-filter ref="concurrencyFilter" position="CONCURRENT_SESSION_FILTER"/> 
        <custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR" />

        <http-basic/>

        <access-denied-handler ref="accessDeniedHandler"/>

        <session-management invalid-session-url="/timeout" session-authentication-strategy-ref="sas" />

        <logout logout-url="/logout" delete-cookies="JSESSIONID" logout-success-url="/loginPage" />
    </http>

    <beans:bean id="accessDeniedHandler" class="me.scape.ti.security.CustomeAccessDeniedHandler"/>

    <beans:bean id="loginFilter"
        class="me.scape.ti.security.filter.CustomUsernamePasswordAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
        <beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
        <beans:property name="sessionAuthenticationStrategy" ref="sas" /> 
    </beans:bean>

    <beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <beans:property name="expiredUrl" value="/timeout"></beans:property>
        <beans:property name="sessionRegistry" ref="sessionRegistry"></beans:property>
    </beans:bean>

    <beans:bean id="securityFilter" class="me.scape.ti.security.filter.CustomSecurityFilter">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="accessDecisionManager" ref="customAccessDecisionManager" />
        <beans:property name="securityMetadataSource" ref="customSecurityMetadataSource" />
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="daoAuthenticationProvider" />
    </authentication-manager>

    <beans:bean id="daoAuthenticationProvider"
        class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="customUserDetailsService" />
        <beans:property name="passwordEncoder" ref="passwordEncoderBean" />
        <beans:property name="saltSource" ref="saltSource" />
    </beans:bean>
    <beans:bean id="passwordEncoderBean"
        class="org.springframework.security.authentication.encoding.Md5PasswordEncoder">
    </beans:bean>
    <beans:bean id="saltSource"
        class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <beans:property name="userPropertyToUse" value="getSalt" />
    </beans:bean>

    <beans:bean id="customUserDetailsService" class="me.scape.ti.security.service.impl.UserDetailsServiceImpl">
        <beans:property name="managerDAO" ref="managerDAO" />
        <beans:property name="roleDAO" ref="roleDAO" />
    </beans:bean>

    <beans:bean id="customAccessDecisionManager" class="me.scape.ti.security.CustomAccessDecisionManager" />
    <beans:bean id="customSecurityMetadataSource" class="me.scape.ti.security.CustomSecurityMetadataSource">
        <beans:constructor-arg name="roleDAO" ref="roleDAO" />
        <beans:constructor-arg name="resourceDAO" ref="resourceDAO" />
    </beans:bean>

    <beans:bean id="loginUrlAuthenticationEntryPoint"
        class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/loginPage" />
    </beans:bean>

    <beans:bean id="authenticationSuccessHandler" class="me.scape.ti.security.AuthenticationSuccessHandler">
        <beans:property name="managerDAO" ref="managerDAO" />
        <beans:property name="defaultTargetUrl" value="/homePage" />
    </beans:bean>
    <beans:bean id="authenticationFailureHandler" class="me.scape.ti.security.AuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/loginHandle" />
    </beans:bean>

    <beans:bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
        <beans:property name="maximumSessions" value="1" />
        <beans:property name="exceptionIfMaximumExceeded" value="false" />
        <beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
    </beans:bean>
    <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

</beans:beans>