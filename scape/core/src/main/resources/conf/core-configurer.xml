<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<aop:aspectj-autoproxy proxy-target-class="true" />
	<context:annotation-config />
	<context:component-scan base-package="me.scape.ti.dao.impl" />

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="scape" />
		<property name="packagesToScan" value="me.scape.ti.dataobject" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="redisConnectionFactory" class="me.ocs.commons.redis.DefaultRedisConnectionFactory">
		<property name="host" value="127.0.0.1" />
	</bean>

	<bean id="redisTemplate" class="me.ocs.commons.redis.DefaultRedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>

	<bean id="securityService" class="me.ocs.oauth.security.DefaultSecurityService">
		<property name="secretKey" value="H8cO8RaYmxo=" />
	</bean>

	<bean id="redisAuthenticationProvider" class="me.ocs.oauth.token.RedisAuthenticationProvider">
		<property name="redisTemplate" ref="redisTemplate" />
		<property name="sequenceService" ref="sequenceService" />
		<property name="securityService" ref="securityService" />
		<property name="tokenExpiresInSec" value="2592000" />
	</bean>

	<bean id="sequenceService" class="me.scape.ti.sequence.DefaultSequenceService" />
	
	<bean id="messageService" class="me.ocs.oss.mss.DefaultMessageService">
		<property name="messageProviders">
			<list>
				<ref bean="mailMessageProvider"/>
				<ref bean="iosMessageProvider"/>
			</list>
		</property>
	</bean>
	
	<bean id="mailMessageProvider" class="me.ocs.oss.mss.providers.MailMessageProvider">
		<property name="securityService" ref="securityService"/>
		<property name="secretUsername" value="Az3DhzNbUOPZEv09OJVuBJT1Ovs3gS6g"/>
		<property name="secretPassword" value="HxtOymFsRwwcasYzSUVzyw=="/>
	</bean>
	
	<bean id="iosMessageProvider" class="me.ocs.oss.mss.providers.IosMessageProvider"/>
</beans>