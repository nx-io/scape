<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<aop:aspectj-autoproxy proxy-target-class="true" />
	<context:annotation-config />
	<context:component-scan base-package="me.scape.ti.dao.impl" />
	
	<bean id="coreDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>
        <property name="maxWait" value="60000"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="filters" value="stat"/>
    </bean>

    <bean id="coreEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="me.scape.ti.dataobject" />
        <property name="persistenceUnitName" value="scape" />
        <property name="dataSource" ref="coreDataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"></property>
                <property name="database" value="MYSQL"></property>
            </bean>
        </property>
        <property name="persistenceProvider">
            <bean class="org.hibernate.ejb.HibernatePersistence" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
                <prop key="hibernate.show_sql">true</prop><!-- production环境注释掉 -->
                <prop key="hibernate.format_sql">true</prop><!-- production环境注释掉 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop><!-- production环境注释掉 -->
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="coreEntityManagerFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />
    
	<bean id="redisConnectionFactory" class="me.ocs.commons.redis.DefaultRedisConnectionFactory">
		<property name="host" value="127.0.0.1" />
	</bean>

	<bean id="redisTemplate" class="me.ocs.commons.redis.DefaultRedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>

	<bean id="securityService" class="me.ocs.oauth.security.DefaultSecurityService">
		<property name="secretKey" value="H8cO8RaYmxo=" />
	</bean>

	<bean id="redisAuthenticationProvider" class="me.ocs.oauth.token.RedisAuthenticationProvider">
		<property name="redisTemplate" ref="redisTemplate" />
		<property name="sequenceService" ref="sequenceService" />
		<property name="securityService" ref="securityService" />
		<property name="tokenExpiresInSec" value="2592000" />
	</bean>

	<bean id="sequenceService" class="me.scape.ti.sequence.DefaultSequenceService" />
	
	<!--
	<bean id="messageService" class="me.ocs.oss.mss.DefaultMessageService">
		<property name="messageProviders">
			<list>
				<ref bean="mailMessageProvider"/>
				<ref bean="iosMessageProvider"/>
			</list>
		</property>
	</bean>
	
	<bean id="mailMessageProvider" class="me.ocs.oss.mss.providers.MailMessageProvider">
		<property name="securityService" ref="securityService"/>
		<property name="secretUsername" value="${message.mail.username}"/>
		<property name="secretPassword" value="${message.mail.password}"/>
	</bean>
	
	<bean id="iosMessageProvider" class="me.ocs.oss.mss.providers.IosMessageProvider">
		<property name="production" value="true"/>
		<property name="autoAdjustCacheLength" value="true"/>
		<property name="readTimeout" value="10000"/>
		<property name="certificate" value="${apns.certificate}"/>
		<property name="password" value="${apns.password}"/>
	</bean>
	-->
</beans>